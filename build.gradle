
buildscript {
    repositories {
        jcenter()
    }
}
plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.9.6'
}

group 'ru.sagitt'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.17.3",
    selenideVersion = "6.5.0",
    junitVersion = "5.8.2"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}


dependencies {
    implementation("org.aeonbits.owner:owner:1.0.12",
            "io.qameta.allure:allure-selenide:${allureVersion}",
            "com.codeborne:selenide:${selenideVersion}"
    )
    testImplementation(
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "org.junit.jupiter:junit-jupiter-engine:${junitVersion}",
            "org.junit.jupiter:junit-jupiter-params:${junitVersion}",
            "org.aspectj:aspectjweaver:1.9.6",
            "org.xerial:sqlite-jdbc:3.34.0",
            "com.github.javafaker:javafaker:1.0.2",
            "org.postgresql:postgresql:42.2.18",
            "ch.qos.logback:logback-classic:1.2.3",
            "io.qameta.allure:allure-java-commons:2.13.5",
            "io.qameta.allure:allure-rest-assured:2.13.5",
            "io.rest-assured:rest-assured:4.2.0",
            )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

allure {
    autoconfigure = true
    aspectjweaver = true
    version = '2.13.7'
    useJUnit5 {version = "${allureVersion}"}
}

test {
    systemProperties = System.properties
    useJUnitPlatform()
}

configurations {
    testCompile
}
    task amazon_tests(type: Test) {
        useJUnitPlatform {
            includeTags 'Amazon'
            excludeTags 'Skip'
        }
    }
